'=======================================
' SUBMARINE モドキ
' 2017/11/16 sacokoala
'=======================================
OPTION STRICT

'-------------------
' GLOBAL VARIABLE

' 0=SmileBASIC 1=MZ-80C 2=both
VAR mz_mode=0
' MZ-80C 40*25 CONSOLE
VAR mz_console_x_max=40
VAR mz_console_y_max=25
VAR mz_console_addr=&HD000
VAR mz_buff_r_ptr=0
VAR mz_buff_w_ptr=0
VAR mz_buff_max=256
DIM mz_buff_addr[mz_buff_max]
DIM mz_buff_chr[mz_console_x_max*mz_buff_max]

VAR hi_score=10
VAR game_wait=4
VAR game_rank=0

VAR c$
VAR b,lx,ly
VAR i,r,x,y,w
VAR flag

' SELECT_SB_MZ
SELECT_SB_MZ

' INIT
SB_INIT
MZ_INIT

'-------------------
' SCENE LOOP
@SCENE_TOP

' DEBUG
'DEBUG_SCENE
'DEBUG_SCENE2

' TITLE
GOSUB @TITLE_SCENE

' GAME
GOSUB @GAME_SCENE

GOTO @SCENE_TOP
'-------------------

' END FUNC
EMUWINDOW 0
PRINT "PROGRAM END"


'=======================================

'-------------------
' GAME SCENE
@GAME_SCENE

'---------
' GAME VAR

 ' PLAYER
 VAR score=0
 VAR score_add=1
 VAR player_num=3
 VAR player_num_max=3
 VAR player_dead=FALSE
 VAR px=30/2
 VAR py=1
 VAR px_min=0+4
 VAR px_max=30-4
 VAR attack_wait=0
 VAR attack_wait_max=7

 ' WEAPON
 VAR weapon_max=4
 VAR weapon_num=0
 VAR weapon_count=0
 DIM wx[weapon_max], wy[weapon_max]
 VAR wy_max=23
 DIM w_wait[weapon_max]
 VAR w_wait_max=4

 ' ENEMY
 VAR born_wait=0
 VAR born_wait_max=30
 VAR enemy_max=9
 DIM ex[enemy_max], ey[enemy_max]
 DIM e_spd[enemy_max],e_wait[enemy_max],e_attack_wait[enemy_max]
 VAR ex_outer=10
 VAR ex_max=30+ex_outer*2
 VAR e_wait_max=8
 VAR e_attack_wait_max=120

 ' ENEMY WEAPON
 VAR e_weapon_max=enemy_max
 VAR e_weapon_num=0
 VAR e_weapon_count=0
 DIM e_wx[e_weapon_max], e_wy[e_weapon_max]
 VAR e_wy_min=2
 DIM e_w_wait[e_weapon_max]
 VAR e_w_wait_max=6

 ' EFFECT
 VAR ef_x,ef_y,ef_wait
 VAR ef_wait_max=4

 GOSUB @INIT_GAME

@RESTART
 GOSUB @INIT_RESTART

 CLS_MZ
 GOSUB @INFO_DISP
 VSYNC 1
 GOSUB @DISP_BG2
 VSYNC 1
 GOSUB @PLAYER_DISP
 VSYNC 60

'---------
' MAIN
@MAIN_LOOP

 GOSUB @PLAYER_INPUT
 GOSUB @PLAYER_DISP
 GOSUB @WEAPON
 GOSUB @ENEMY_BORN
 GOSUB @ENEMY
 GOSUB @ENEMY_ATTACK
 GOSUB @ENEMY_WEAPON
 GOSUB @WEAPON_CHECK
 GOSUB @PLAYER_CHECK
 GOSUB @EFFECT
 GOSUB @INFO_UPDATE

 UPDATE_MZ
 VSYNC game_wait

 IF player_dead==FALSE THEN GOTO @MAIN_LOOP
 VSYNC 60

 player_num=player_num-1
 IF player_num>0 THEN  GOTO @RESTART

'---------
@RESULT
 IF hi_score<score THEN hi_score=score
 LOCATE_MZ 32,2
 PRINT_MZ STR$(hi_score)
 LOCATE_MZ 10,8
 PRINT_MZ "           "
 LOCATE_MZ 10,9
 PRINT_MZ " GAME OVER "
 LOCATE_MZ 10,10
 PRINT_MZ "           "
 UPDATE_MZ
 VSYNC 60
 WHILE 1
  LOCATE_MZ 9,11
  PRINT_MZ " HIT ANY KEY "
  LOCATE_MZ 9,12
  PRINT_MZ "             "
  ' KEYBOARD or JOYPAD BUTTON
  c$=INKEY$()
  b=BUTTON()
  IF b AND (1<<#EMUJOY_1) THEN c$="E"
  IF b AND (1<<#EMUJOY_2) THEN c$="N"
  IF b AND (1<<#EMUJOY_3) THEN c$="H"
  IF c$!="" THEN BREAK
  UPDATE_MZ
  VSYNC 1
 WEND
 BEEP 1
 VSYNC 60
RETURN


'-------------------
' PLAYER
@PLAYER_INPUT
 c$=INKEY$()
 b=BUTTON()
 'IF c$==CHR$(30) THEN b=b OR 1
 'IF c$==CHR$(31) THEN b=b OR 2
 'IF c$==CHR$(29) THEN b=b OR (1<<#EMUJOY_LEFT)
 'IF c$==CHR$(28) THEN b=b OR (1<<#EMUJOY_RIGHT)
 'IF b AND (1<<#EMUJOY_UP)    THEN c$="E"
 'IF b AND (1<<#EMUJOY_DOWN)  THEN c$="X"
 IF b AND (1<<#EMUJOY_LEFT)  THEN c$="Z"
 IF b AND (1<<#EMUJOY_RIGHT) THEN c$="C"
 IF b AND (1<<#EMUJOY_1)     THEN c$=","
 IF b AND (1<<#EMUJOY_2)     THEN c$="/"
 lx=STICK(#STICK_LX)
 'ly=STICK(#STICK_LY
 IF lx<(-32768*0.2) THEN c$="Z"
 IF lx>( 32768*0.2) THEN c$="C"

 ' PLAYER_MOVE
 IF (c$=="z")OR(c$=="Z") THEN px=px-1
 IF (c$=="c")OR(c$=="C") THEN px=px+1
 IF px < px_min THEN px=px_min
 IF px > px_max THEN px=px_max
 ' DEBUG
 'LOCATE 0,0
 'PRINT STR$(px)

 ' PLAYER_ATTACK
 GOSUB @PLAYER_ATTACK
RETURN

@PLAYER_ATTACK
 VAR ax,ay
 IF attack_wait>0 THEN
  attack_wait=attack_wait-1
 ELSEIF (c$==",")OR(c$=="/") THEN
  IF c$=="," THEN ax=px-2
  IF c$=="/" THEN ax=px+2

  FOR i=0 TO weapon_max-1
   PLAYER_ATTACK_ONE wx[i],wy[i],w_wait[i] OUT wx[i],wy[i],w_wait[i]
   IF attack_wait>0 THEN RETURN
  NEXT
 ENDIF
RETURN

DEF PLAYER_ATTACK_ONE wx_i,wy_i,w_wait_i OUT wx0,wy0,w_wait0
 wx0 = wx_i
 wy0 = wy_i
 w_wait0 = w_wait_i
 IF wy0<0 THEN
  wx0=ax
  wy0=3
  w_wait0=0
  COLOR_MZ #RED
  LOCATE_MZ wx0,wy0
  PRINT_MZ "ェ"
  COLOR_MZ #WHITE
  attack_wait=attack_wait_max
  BEEP 4
 ENDIF
END

@PLAYER_DISP
 COLOR_MZ #RED
 LOCATE_MZ px-3,py
 PRINT_MZ "  "
 LOCATE_MZ px-3,py+1
 PRINT_MZ "  "
 COLOR_MZ #WHITE
RETURN

@PLAYER_CHECK
 FOR i=0 TO e_weapon_max-1
  player_dead=PLAYER_CHECK_ONE(px,py,e_wx[i],e_wy[i])
  IF player_dead==TRUE THEN BREAK
 NEXT

 IF player_dead==TRUE THEN
  COLOR_MZ #RED
  LOCATE_MZ px-3,py
  PRINT_MZ "  ***  "
  LOCATE_MZ px-3,py+1
  PRINT_MZ " ***** "
  COLOR_MZ #WHITE
  BEEP 5
 ENDIF
RETURN

DEF PLAYER_CHECK_ONE(px_i,py_i,e_wx_i,e_wy_i)
 VAR px=px_i
 VAR py=py_i
 VAR e_wx0=e_wx_i
 VAR e_wy0=e_wy_i
 ' DEBUG
 'LOCATE 0,25
 'PRINT "PLAYER_CHECK",px,py,e_wx0,e_wy0
 IF e_wy0<0 THEN RETURN FALSE
 IF (px>=e_wx0-2) AND (px<=e_wx0+2) THEN
  IF (e_wy0>=2) AND (e_wy0<=3) THEN
   RETURN TRUE
  ENDIF
 ENDIF
 RETURN FALSE
END


'-------------------
' WEAPON
@WEAPON
 FOR i=0 TO weapon_max-1
  WEAPON_MOVE_ONE wx[i],wy[i],w_wait[i] OUT wx[i],wy[i],w_wait[i]
 NEXT
RETURN

DEF WEAPON_MOVE_ONE wx_i,wy_i,w_wait_i OUT wx0,wy0,w_wait0
 wx0 = wx_i
 wy0 = wy_i
 w_wait0 = w_wait_i
 IF wx0>0 THEN
  w_wait0=w_wait0+1
  IF wy0>=wy_max THEN
   LOCATE_MZ wx0,wy0
   PRINT_MZ " "
   wx0=-1
   wy0=-1
   w_wait0=0
   'BEEP 0
  ENDIF
  IF w_wait0 >= w_wait_max THEN
   w_wait0=0
   LOCATE_MZ wx0,wy0
   IF wy0==3 THEN
    COLOR_MZ #BLUE
    PRINT_MZ "-"
    COLOR_MZ #WHITE
   ELSE
    PRINT_MZ " "
   ENDIF
   wy0=wy0+1
   COLOR_MZ #RED
   LOCATE_MZ wx0,wy0
   IF wy0==wy_max THEN
    PRINT_MZ "γ"
   ELSE
    PRINT_MZ "ェ"
   ENDIF
   COLOR_MZ #WHITE
   'BEEP 1
  ENDIF
 ENDIF
END

@WEAPON_CHECK
 FOR i=0 TO weapon_max-1
  WEAPON_CHECK_ONE0 wx[i],wy[i],w_wait[i] OUT wx[i],wy[i],w_wait[i]
  ' DEBUG
  'x=wx[i]:y=wy[i]:w=w_wait[i]
  'WEAPON_CHECK_ONE0 x,y,w OUT x,y,w
  'PRINT i
  'wx[i]=x:wy[i]=y:w_wait[i]=w
 NEXT
RETURN

DEF WEAPON_CHECK_ONE0 wx_i,wy_i,w_wait_i OUT wx0,wy0,w_wait0
 VAR i
 wx0=wx_i
 wy0=wy_i
 w_wait0=w_wait_i
 FOR i=0 TO enemy_max-1
  WEAPON_CHECK_ONE wx0,wy0,w_wait0,ex[i],ey[i],e_spd[i],e_wait[i] OUT wx0,wy0,w_wait0,ex[i],e_spd[i],e_wait[i]
 NEXT
END

DEF WEAPON_CHECK_ONE wx_i,wy_i,w_wait_i,ex_i,ey_i,e_spd_i,e_wait_i OUT wx0,wy0,w_wait0,ex0,e_spd0,e_wait0
 wx0=wx_i
 wy0=wy_i
 w_wait0=w_wait_i
 ex0=ex_i
 VAR ey0=ey_i
 e_spd0=e_spd_i
 e_wait0=e_wait_i
 ' DEBUG
 'LOCATE 0,25
 'PRINT "W_C",wx0,wy0,ex0,ey0
 IF (wx0<0) OR (wy0<0) THEN RETURN
 IF ex0<0 THEN RETURN
 VAR temp_ex0
 IF SGN(e_spd0)>0 THEN
  temp_ex0=ex0
 ELSE
  temp_ex0=ex0-1
 ENDIF
 IF (wx0>=temp_ex0-ex_outer-2) AND (wx0<=temp_ex0-ex_outer+2) THEN
  IF wy0==ey0 THEN
   'LOCATE wx0,wy0
   'PRINT " "
   x=ex0-ex_outer-3
   IF x<1 THEN x=1
   IF x>30-6 THEN x=30-6
   LOCATE_MZ x,ey0
   PRINT_MZ "      "
   IF ef_x<0 THEN
    ef_x=wx0
    ef_y=wy0
    ef_wait=ef_wait_max
   ENDIF
   wx0=-1
   wy0=-1
   w_wait0=0
   ex0=-1
   e_spd0=0
   e_wait0=0
   score=score+score_add
   BEEP 3
  ENDIF
 ENDIF
END


'-------------------
' ENEMY
@ENEMY_BORN
 VAR bx,b_spd
 IF born_wait>0 THEN
  born_wait=born_wait-1
 ELSE
  r=RND(4)
  IF r>=3 THEN
   b_spd=2
  ELSEIF r>=2 THEN
   b_spd=1
  ELSEIF r>=1 THEN
   b_spd=-1
  ELSE
   b_spd=-2
  ENDIF

  FOR i=enemy_max-1 TO 0 STEP -1
   IF (i==2) OR (i==3) THEN
    IF (game_rank<1) OR (score<20) THEN
     CONTINUE
    ENDIF
   ENDIF
   IF (i==0) OR (i==1) THEN
    IF (game_rank<2) OR (score<40)  THEN
     CONTINUE
    ENDIF
   ENDIF
   ENEMY_BORN_ONE ex[i],e_spd[i],e_wait[i] OUT ex[i],e_spd[i],e_wait[i]
   IF born_wait>0 THEN RETURN
  NEXT
 ENDIF
RETURN

DEF ENEMY_BORN_ONE ex_i,e_spd_i,e_wait_i OUT ex0,e_spd0,e_wait0
 ex0=ex_i
 e_spd0=e_spd_i
 e_wait0=e_wait_i
 IF ex0<0 THEN
  IF b_spd<0 THEN ex0=ex_max-1
  IF b_spd>0 THEN ex0=0
  e_spd0=b_spd
  e_wait0=0
  born_wait=born_wait_max
 ENDIF
END

'-------------------
@ENEMY
 ' ENEMY MOVE
 FOR i=0 TO enemy_max-1
  ENEMY_MOVE_ONE ex[i],e_spd[i],e_wait[i] OUT ex[i],e_spd[i],e_wait[i]
 NEXT
 ' ENEMY DISP
 FOR i=0 TO enemy_max-1
  ENEMY_DISP_ONE ex[i],ey[i],e_spd[i],e_wait[i]
 NEXT
RETURN


DEF ENEMY_MOVE_ONE ex_i,e_spd_i,e_wait_i OUT ex0,e_spd0,e_wait0
 ex0 = ex_i
 e_spd0 = e_spd_i
 e_wait0 = e_wait_i
 IF (ex0>=0) AND (ex0<ex_max) THEN
  e_wait0=e_wait0+1
  IF e_wait0 >= e_wait_max/ABS(e_spd0) THEN
   e_wait0=0
   ex0=ex0+SGN(e_spd0)
   IF (ex0<0) OR (ex0>=ex_max) THEN
    ex0=-1
    e_spd0=0
    e_wait0=0
   ENDIF
  ENDIF
 ENDIF
END

DEF ENEMY_DISP_ONE ex_i,ey_i,e_spd_i,e_wait_i
 VAR ex0 = ex_i
 VAR ey0 = ey_i
 VAR e_spd0 = e_spd_i
 VAR e_wait0 = e_wait_i
 IF e_wait0==0 THEN

  IF SGN(e_spd0)>0 THEN
   IF (ex0>=ex_outer+4) AND (ex0<=ex_max-(ex_outer+3)) THEN
    LOCATE_MZ ex0-(ex_outer+3),ey0
    PRINT_MZ " <(X)>"
   ENDIF
   IF ex0==ex_outer-1 THEN
    LOCATE_MZ 1,ey0
    PRINT_MZ ">"
   ELSEIF ex0==ex_outer THEN
    LOCATE_MZ 1,ey0
    PRINT_MZ ")>"
   ELSEIF ex0==ex_outer+1 THEN
    LOCATE_MZ 1,ey0
    PRINT_MZ "X)>"
   ELSEIF ex0==ex_outer+2 THEN
    LOCATE_MZ 1,ey0
    PRINT_MZ "(X)>"
   ELSEIF ex0==ex_outer+3 THEN
    LOCATE_MZ 1,ey0
    PRINT_MZ "<(X)>"
   ENDIF
   IF ex0==ex_max-(ex_outer+2) THEN
    LOCATE_MZ ex0-(ex_outer+3),ey0
    PRINT_MZ " <(X)"
   ELSEIF ex0==ex_max-(ex_outer+1) THEN
    LOCATE_MZ ex0-(ex_outer+3),ey0
    PRINT_MZ " <(X"
   ELSEIF ex0==ex_max-(ex_outer) THEN
    LOCATE_MZ ex0-(ex_outer+3),ey0
    PRINT_MZ " <("
   ELSEIF ex0==ex_max-(ex_outer-1) THEN
    LOCATE_MZ ex0-(ex_outer+3),ey0
    PRINT_MZ " <"
   ELSEIF ex0==ex_max-(ex_outer-2) THEN
    LOCATE_MZ ex0-(ex_outer+3),ey0
    PRINT_MZ " "
   ENDIF

  ELSE
   IF (ex0>=ex_outer+4) AND (ex0<=ex_max-(ex_outer+3)) THEN
    LOCATE_MZ ex0-(ex_outer+3),ey0
    PRINT_MZ "<(X)> "
   ENDIF
   IF ex0==ex_outer-1 THEN
    LOCATE_MZ 1,ey0
    PRINT_MZ " "
   ELSEIF ex0==ex_outer THEN
    LOCATE_MZ 1,ey0
    PRINT_MZ "> "
   ELSEIF ex0==ex_outer+1 THEN
    LOCATE_MZ 1,ey0
    PRINT_MZ ")> "
   ELSEIF ex0==ex_outer+2 THEN
    LOCATE_MZ 1,ey0
    PRINT_MZ "X)> "
   ELSEIF ex0==ex_outer+3 THEN
    LOCATE_MZ 1,ey0
    PRINT_MZ "(X)> "
   ENDIF
   IF ex0==ex_max-(ex_outer+2) THEN
    LOCATE_MZ ex0-(ex_outer+3),ey0
    PRINT_MZ "<(X)>"
   ELSEIF ex0==ex_max-(ex_outer+1) THEN
    LOCATE_MZ ex0-(ex_outer+3),ey0
    PRINT_MZ "<(X)"
   ELSEIF ex0==ex_max-(ex_outer) THEN
    LOCATE_MZ ex0-(ex_outer+3),ey0
    PRINT_MZ "<(X"
   ELSEIF ex0==ex_max-(ex_outer-1) THEN
    LOCATE_MZ ex0-(ex_outer+3),ey0
    PRINT_MZ "<("
   ELSEIF ex0==ex_max-(ex_outer-2) THEN
    LOCATE_MZ ex0-(ex_outer+3),ey0
    PRINT_MZ "<"
   ENDIF
  ENDIF

  ' MAP
  COLOR_MZ #GREEN
  LOCATE_MZ 31,15+((ey0-6)/2)
  IF ex0<0 THEN
   PRINT_MZ "|  X  |"
  ELSEIF ex0<ex_outer/2 THEN
   PRINT_MZ "|． X  |"
  ELSEIF ex0<ex_outer-1 THEN
   PRINT_MZ "| ．X  |"
  ELSEIF ex0>ex_max-(ex_outer/2) THEN
   PRINT_MZ "|  X ．|"
  ELSEIF ex0>ex_max-(ex_outer-2) THEN
   PRINT_MZ "|  X． |"
  ELSE
   PRINT_MZ "|  X  |"
  ENDIF
  COLOR_MZ #WHITE
 ENDIF

END

'-------------------
' ENEMY ATTACK
@ENEMY_ATTACK
 FOR i=0 TO enemy_max-1
  ENEMY_ATTACK_CHECK ex[i],e_attack_wait[i] OUT e_attack_wait[i],flag
  IF flag==TRUE THEN
   ENEMY_ATTACK_ONE ex[i],ey[i],e_wx[i],e_wy[i],e_w_wait[i] OUT e_wx[i],e_wy[i],e_w_wait[i]
  ENDIF
 NEXT
RETURN


DEF ENEMY_ATTACK_CHECK ex_i,e_attack_wait_i OUT e_attack_wait0,flag
 VAR ex0=ex_i
 e_attack_wait0=e_attack_wait_i
 flag=FALSE
 IF (ex0>ex_outer) AND (ex0<ex_max-ex_outer) THEN
  IF e_attack_wait0>0 THEN
   e_attack_wait0=e_attack_wait0-1
  ELSE
   'ENEMY_ATTACK_ONE ex0,ey0,e_wx00,e_wy00,e_w_wait00 OUT e_wx00,e_wy00,e_w_wait00
   flag=TRUE
   e_attack_wait0=e_attack_wait_max/2+RND(e_attack_wait_max/2)
  ENDIF
 ENDIF
END

DEF ENEMY_ATTACK_ONE ex_i,ey_i,wx_i,wy_i,w_wait_i OUT wx0,wy0,w_wait0
 wx0 = wx_i
 wy0 = wy_i
 w_wait0 = w_wait_i
 IF wy0<0 THEN
  wx0=ex_i-ex_outer
  wy0=ey_i-1
  w_wait0=0
  LOCATE_MZ wx0,wy0
  PRINT_MZ "+"
  attack_wait=attack_wait_max
  BEEP 4
 ENDIF
END

'-------------------
' ENEMY WEAPON
@ENEMY_WEAPON
 FOR i=0 TO e_weapon_max-1
  ENEMY_WEAPON_MOVE_ONE e_wx[i],e_wy[i],e_w_wait[i] OUT e_wx[i],e_wy[i],e_w_wait[i]
 NEXT
RETURN

DEF ENEMY_WEAPON_MOVE_ONE e_wx_i,e_wy_i,e_w_wait_i OUT e_wx0,e_wy0,e_w_wait0
 e_wx0 = e_wx_i
 e_wy0 = e_wy_i
 e_w_wait0 = e_w_wait_i
 IF e_wx0>0 THEN
  e_w_wait0=e_w_wait0+1
  IF e_wy0<=e_wy_min THEN
   LOCATE_MZ e_wx0,e_wy0
   PRINT_MZ " "
   e_wx0=-1
   e_wy0=-1
   e_w_wait0=0
   'BEEP 0
  ENDIF
  IF e_w_wait0 >= e_w_wait_max THEN
   e_w_wait0=0
   LOCATE_MZ e_wx0,e_wy0
   IF e_wy0==3 THEN
    COLOR_MZ #BLUE
    PRINT_MZ "-"
    COLOR_MZ #WHITE
   ELSE
    PRINT_MZ " "
   ENDIF
   e_wy0=e_wy0-1
   LOCATE_MZ e_wx0,e_wy0
   IF e_wy0==e_wy_min THEN
    PRINT_MZ "γ"
   ELSE
    PRINT_MZ "+"
   ENDIF
   'BEEP 1
  ENDIF
 ENDIF
END

'-------------------
' EFFECT
@EFFECT
 IF ef_wait<=0 THEN RETURN
 ef_wait=ef_wait-1
 IF ef_wait<=0 THEN
  LOCATE_MZ ef_x-1,ef_y
  PRINT_MZ "   "
  ef_x=-1
  ef_y=-1
  ef_wait=0
  RETURN
 ENDIF
 IF ef_x>0 THEN
  COLOR_MZ #RED
  LOCATE_MZ ef_x-1,ef_y
  PRINT_MZ "***"
  COLOR_MZ #WHITE
 ENDIF
RETURN

'-------------------
' INIT_GAME
@INIT_GAME
 score=0
 player_num=player_num_max
 player_dead=FALSE
 IF game_rank==0 THEN
  score_add=1
  e_wait_max=14
  born_wait_max=40
  e_attack_wait_max=120
  e_w_wait_max=6
 ELSEIF game_rank==1 THEN
  score_add=2
  e_wait_max=10
  born_wait_max=30
  e_attack_wait_max=90
  e_w_wait_max=6
 ELSEIF game_rank==2 THEN
  score_add=4
  e_wait_max=6
  born_wait_max=20
  e_attack_wait_max=60
  e_w_wait_max=5
 ENDIF
RETURN

@INIT_RESTART
 px=30/2
 FOR i=0 TO weapon_max-1
  wx[i]=-1:wy[i]=-1:w_wait[i]=0
 NEXT
 born_wait=born_wait_max
 FOR i=0 TO enemy_max-1
  ex[i]=-1
  ey[i]=i*2+6
  e_spd[i]=0
  e_wait[i]=0
  e_attack_wait[i]=RND(e_attack_wait_max)
 NEXT
 FOR i=0 TO e_weapon_max-1
  e_wx[i]=-1
  e_wy[i]=-1
  e_w_wait[i]=0
 NEXT
 ef_x=-1:ef_y=-1:ef_wait=0
RETURN

'-------------------
' INFO
@INFO_DISP
 LOCATE_MZ 31,1
 PRINT_MZ " HI SCORE"
 LOCATE_MZ 32,2
 PRINT_MZ STR$(hi_score)
 LOCATE_MZ 32,4
 PRINT_MZ "SCORE"
 LOCATE_MZ 32,5
 PRINT_MZ STR$(score)
 LOCATE_MZ 32,7
 IF game_rank==0 THEN
  PRINT_MZ "EASY"
 ELSEIF game_rank==1 THEN
  PRINT_MZ "NORMAL"
 ELSEIF game_rank==2 THEN
  PRINT_MZ "HARD"
 ENDIF
 COLOR_MZ #RED
 LOCATE_MZ 32,10
 PRINT_MZ "ェェェェ"
 LOCATE_MZ 32,12
 IF player_num>=5 THEN
  PRINT_MZ ""
 ELSEIF player_num==4 THEN
  PRINT_MZ "　"
 ELSEIF player_num==3 THEN
  PRINT_MZ "　　"
 ELSEIF player_num==2 THEN
  PRINT_MZ "　　　"
 ELSEIF player_num==1 THEN
  PRINT_MZ "　　　　"
 ENDIF
 COLOR_MZ #WHITE
RETURN

@INFO_UPDATE
 LOCATE_MZ 32,5
 PRINT_MZ STR$(score)
 weapon_count=0
 FOR i=0 TO weapon_max-1
  IF wy[i]<0 THEN weapon_count=weapon_count+1
 NEXT
 IF weapon_num == weapon_count THEN
  RETURN
 ELSE
  weapon_num = weapon_count
 ENDIF
 COLOR_MZ #RED
 LOCATE_MZ 32,10
 IF weapon_num==4 THEN PRINT_MZ "ェェェェ"
 IF weapon_num==3 THEN PRINT_MZ "ェェェ "
 IF weapon_num==2 THEN PRINT_MZ "ェェ  "
 IF weapon_num==1 THEN PRINT_MZ "ェ   "
 IF weapon_num==0 THEN PRINT_MZ "    "
 COLOR_MZ #WHITE
RETURN

'-------------------
@DISP_BG
 FOR i=0 TO 22
  LOCATE_MZ 0,i
  PRINT_MZ ""
  LOCATE_MZ 30,i
  PRINT_MZ ""
 NEXT
 LOCATE_MZ 0,22
 PRINT_MZ ""
RETURN

@DISP_BG2
 COLOR_MZ #BLUE
 LOCATE_MZ 0,0
 PRINT_MZ "                             "
 LOCATE_MZ 0,1
 PRINT_MZ "                             "
 LOCATE_MZ 0,2
 PRINT_MZ "                             "
 LOCATE_MZ 0,3
 PRINT_MZ "-----------------------------"
 LOCATE_MZ 0,4
 PRINT_MZ "                             "
 LOCATE_MZ 0,5
 PRINT_MZ "                             "
 LOCATE_MZ 0,6
 PRINT_MZ "                             "
 LOCATE_MZ 0,7
 PRINT_MZ "                             "
 LOCATE_MZ 0,8
 PRINT_MZ "                             "
 LOCATE_MZ 0,9
 PRINT_MZ "                             "
 LOCATE_MZ 0,10
 PRINT_MZ "                             "
 LOCATE_MZ 0,11
 PRINT_MZ "                             "
 LOCATE_MZ 0,12
 PRINT_MZ "                             "
 LOCATE_MZ 0,13
 PRINT_MZ "                             "
 LOCATE_MZ 0,14
 PRINT_MZ "                             "
 LOCATE_MZ 0,15
 PRINT_MZ "                             "
 LOCATE_MZ 0,16
 PRINT_MZ "                             "
 LOCATE_MZ 0,17
 PRINT_MZ "                             "
 LOCATE_MZ 0,18
 PRINT_MZ "                             "
 LOCATE_MZ 0,19
 PRINT_MZ "                             "
 LOCATE_MZ 0,20
 PRINT_MZ "                             "
 LOCATE_MZ 0,21
 PRINT_MZ "                             "
 LOCATE_MZ 0,22
 PRINT_MZ "                             "
 LOCATE_MZ 0,23
 PRINT_MZ "                             "
 LOCATE_MZ 0,24
 PRINT_MZ ""
 COLOR_MZ #WHITE
 COLOR_MZ #GREEN
 LOCATE_MZ 31,14
 PRINT_MZ "+-----+"
 LOCATE_MZ 31,15
 PRINT_MZ "|  X  |"
 LOCATE_MZ 31,16
 PRINT_MZ "|  X  |"
 LOCATE_MZ 31,17
 PRINT_MZ "|  X  |"
 LOCATE_MZ 31,18
 PRINT_MZ "|  X  |"
 LOCATE_MZ 31,19
 PRINT_MZ "|  X  |"
 LOCATE_MZ 31,20
 PRINT_MZ "|  X  |"
 LOCATE_MZ 31,21
 PRINT_MZ "|  X  |"
 LOCATE_MZ 31,22
 PRINT_MZ "|  X  |"
 LOCATE_MZ 31,23
 PRINT_MZ "|  X  |"
 LOCATE_MZ 31,24
 PRINT_MZ "+-----+"
 COLOR_MZ #WHITE
RETURN


'=======================================

'-------------------
' TITLE
@TITLE_SCENE
 CLS_MZ
 LOCATE_MZ 5,2
 PRINT_MZ "*******************"
 LOCATE_MZ 5,3
 PRINT_MZ "*　センスイカンケ゛ーム　モト゛キ　*"
 LOCATE_MZ 5,4
 PRINT_MZ "*******************"
 LOCATE_MZ 7,6
 PRINT_MZ ""
 LOCATE_MZ 7,7
 PRINT_MZ "　SHIP"
 LOCATE_MZ 7,9
 PRINT_MZ "<(X)>　SUBMARINE"
 LOCATE_MZ 7,11
 PRINT_MZ "*フネ　ミキ゛　　[C]"
 LOCATE_MZ 7,12
 PRINT_MZ "*フネ　ヒタ゛リ　[Z]"
 LOCATE_MZ 7,14
 PRINT_MZ "*ハ゛クライ　ミキ゛　　[,]"
 LOCATE_MZ 7,15
 PRINT_MZ "*ハ゛クライ　ヒタ゛リ　[/]"
 LOCATE_MZ 7,17
 PRINT_MZ "<PUSH KEY>"
 LOCATE_MZ 7,18
 PRINT_MZ "*EASY　　　...E"
 LOCATE_MZ 7,19
 PRINT_MZ "*NORMAL　...N"
 LOCATE_MZ 7,20
 PRINT_MZ "*HARD　　　...H"
 LOCATE_MZ 7,22
 PRINT_MZ "HI SCORE "+STR$(hi_score)
 'LOCATE 7,23
 'PRINT "SCORE    "+STR$(score)
 WHILE 1
  ' KEYBOARD or JOYPAD BUTTON
  c$=INKEY$()
  b=BUTTON()
  IF b AND (1<<#EMUJOY_1) THEN c$="E"
  IF b AND (1<<#EMUJOY_2) THEN c$="N"
  IF b AND (1<<#EMUJOY_3) THEN c$="H"
  IF (c$=="e")OR(c$=="E") THEN
   game_rank=0
   BREAK
  ELSEIF (c$=="n")OR(c$=="N") THEN
   game_rank=1
   BREAK
  ELSEIF (c$=="h")OR(c$=="H") THEN
   game_rank=2
   BREAK
  ENDIF
  UPDATE_MZ
  VSYNC 1
 WEND

 BEEP 1
 VSYNC 60
RETURN


'=======================================

'-------------------
' DEBUG
DEF DEBUG_SCENE
 CLS_MZ
 LOCATE_MZ 0,2
 PRINT_MZ "PRINT TEST (DEBUG)"
 COLOR_MZ #RED
 LOCATE_MZ 0,4
 PRINT_MZ "ABCDEFG HIJKLMN OPQRSTU VWXYZ"
 COLOR_MZ #BLUE
 LOCATE_MZ 0,5
 PRINT_MZ "abcdefg hijklmn opqrstu vwxyz"
 COLOR_MZ #YELLOW
 LOCATE_MZ 0,6
 PRINT_MZ "0123456789"
 COLOR_MZ #GREEN
 LOCATE_MZ 0,7
 PRINT_MZ "!#$%&'()"
 COLOR_MZ #FUCHSIA
 LOCATE_MZ 0,8
 PRINT_MZ "*+,-./:;"
 COLOR_MZ #MAGENTA
 LOCATE_MZ 0,9
 PRINT_MZ "<=>?@[\]|="
 COLOR_MZ #CYAN
 LOCATE_MZ 0,10
 PRINT_MZ "チコソシイハキクニマノリモミラ"
 COLOR_MZ #AQUA
 LOCATE_MZ 0,11
 PRINT_MZ "セタストカナヒテサンツロケ「ァャ"
 COLOR_MZ #PURPLE
 LOCATE_MZ 0,12
 PRINT_MZ "ワヌフアウエオヤユヨホヘレメルネ"
 COLOR_MZ #LIME
 LOCATE_MZ 0,13
 PRINT_MZ "ム」ィュヲ、ゥョ゜．ェッ゛。ォー"
 COLOR_MZ #SILVER
 LOCATE_MZ 0,14
 PRINT_MZ "♠♦←♣●？：↑＜[♥]＠＞"
 COLOR2_MZ #NAVY,#GRAY
 LOCATE_MZ 0,15
 PRINT_MZ ""
 COLOR2_MZ #WHITE,#BLACK
 LOCATE_MZ 0,16
 PRINT_MZ "日月火水木金土生年時分秒円\£"
 LOCATE_MZ 0,17
 PRINT_MZ ""
 LOCATE_MZ 0,18
 PRINT_MZ ""
 UPDATE_MZ
 VSYNC 180
END

'-------------------
' DEBUG
DEF DEBUG_SCENE2
 VAR y
 CLS_MZ
 FOR y=0 TO mz_console_y_max-1
  LOCATE_MZ 0,y
  PRINT_MZ "HELLO WORLD."+STR$(y)
 NEXT
 UPDATE_MZ
 VSYNC 180
END

'-------------------
' SELECT_SB_MZ
DEF SELECT_SB_MZ
 VAR sel$
 ACLS
 VISIBLE 1,0,0
 mz_mode=-1
 WHILE mz_mode==-1
  VSYNC 1
  CLS
  'PRINT "Select game mode.(0:SmileBasic 1:MZ-80C)"
  'sel$=INKEY$()
  LOCATE 2,2
  INPUT"Select game mode.(0:SmileBasic 1:MZ-80C 2:both)";sel$
  IF sel$=="0" THEN
   mz_mode=0
  ELSEIF sel$=="1" THEN
   mz_mode=1
  ELSEIF sel$=="2" THEN
   mz_mode=2
  ELSE
   mz_mode=-1
  ENDIF
 WEND
END

'-------------------
' SB_INIT
DEF SB_INIT
 ACLS
 CLS
 VISIBLE 1,0,0
 IF mz_mode>=1 THEN
  XSCREEN 640,360,16/9
 ELSE
  XSCREEN 320,240,4/3
 ENDIF
END

'-------------------
' MZ_INIT
DEF MZ_INIT
 IF mz_mode>=1 THEN
  ' MZ-80C RESET
  EMURESET
  ' MZ-80C 320*200 (40*25 CONSOLE)
  IF mz_mode==1 THEN
   'EMUWINDOW 960,0,320,200
   'EMUWINDOW 640,0,640,400
   EMUWINDOW 320,0,960,600
   'EMUWINDOW 5
   ' CURSOR OFF
   'mem_e000=EMUMEM(&HE000)
   'EMUMEM &HE000, mem_e000 OR &H80
   PRINT " "
   PRINT "MZ-80C CLOSE COMMAND"
   PRINT " "
   PRINT "[EMUWINDOW 0]"
   PRINT "  OR"
   PRINT "[ACLS]"
   PRINT " "
  ELSEIF mz_mode==2 THEN
   EMUWINDOW 640,0,640,400
  ENDIF
  VSYNC 180
 ELSE
  EMUWINDOW 0
 ENDIF

END


'=======================================

'-------------------
' UPDATE_MZ
DEF UPDATE_MZ
 VAR i,j
 IF mz_mode==0 OR mz_mode==2 THEN
  ' SmileBASIC NO UPDATE
 ENDIF
 IF mz_mode>=1 THEN
  FOR j=0 TO mz_buff_max-1
   IF mz_buff_r_ptr==mz_buff_w_ptr THEN BREAK
   FOR i=0 TO mz_console_x_max-1
    ' DEBUG
    'PRINT "i    &H";HEX$(i)
    'PRINT "addr &H";HEX$(mz_buff_addr[mz_buff_r_ptr]+i)
    'PRINT "chr  &H";HEX$(mz_buff_chr[mz_console_x_max*mz_buff_r_ptr+i])
    IF mz_buff_chr[mz_console_x_max*mz_buff_r_ptr+i]==-1 THEN BREAK
    EMUMEM mz_buff_addr[mz_buff_r_ptr]+i, mz_buff_chr[mz_console_x_max*mz_buff_r_ptr+i]
   NEXT
   mz_buff_r_ptr=mz_buff_r_ptr+1
   IF mz_buff_r_ptr>=mz_buff_max THEN mz_buff_r_ptr=0
  NEXT
 ENDIF
END

'-------------------
' CLS_MZ
DEF CLS_MZ
 VAR i
 IF mz_mode==0 OR mz_mode==2 THEN
  CLS
 ENDIF
 IF mz_mode>=1 THEN
  ' MZ-80C 40*25 CONSOLE
  FOR i=0 TO mz_console_x_max*mz_console_y_max-1
   EMUMEM &HD000+i, 0
  NEXT
 ENDIF
END

'-------------------
' COLOR_MZ
DEF COLOR_MZ col
 IF mz_mode==0 OR mz_mode==2 THEN
  COLOR2_MZ col,#BLACK
 ENDIF
 IF mz_mode>=1 THEN
  ' MZ-80C NO COLOR (ALL GREEN)
 ENDIF
END
DEF COLOR2_MZ col,col2
 IF mz_mode==0 OR mz_mode==2 THEN
  COLOR col,col2
 ENDIF
 IF mz_mode>=1 THEN
  ' MZ-80C NO COLOR (ALL GREEN)
 ENDIF
END

'-------------------
' LOCATE_MZ
DEF LOCATE_MZ x,y
 ' DEBUG
 IF (x<0)OR(x>=mz_console_x_max) THEN
  PRINT "LOCATE_MZ ERROR x=";x
 ENDIF
 IF (y<0)OR(y>=mz_console_y_max) THEN
  PRINT "LOCATE_MZ ERROR y=";y
 ENDIF
 IF mz_mode==0 OR mz_mode==2 THEN
  LOCATE x,y
 ENDIF
 IF mz_mode>=1 THEN
  ' MZ-80C 40*25 CONSOLE
  'mz_console_addr = &HD000 + (x + mz_console_x_max*y)
  DIM addr[1]
  addr[0]=&HD000 + (x + mz_console_x_max*y)
  COPY mz_buff_addr,mz_buff_w_ptr,addr
  ' DEBUG
  'PRINT "w_ptr &H";HEX$(mz_buff_w_ptr)
  'PRINT "buff  &H";HEX$(mz_buff_addr[mz_buff_w_ptr])
  'mz_buff_w_ptr=mz_buff_w_ptr+1
  'IF mz_buff_w_ptr>=mz_buff_max THEN mz_buff_w_ptr=0
 ENDIF
 ' DEBUG
 'PRINT "L",x,y
END

'-------------------
' PRINT_MZ
DEF PRINT_MZ str0$
 VAR i
 VAR str_ascii,str_mz
 VAR input_str$,output_num
 VAR str1$
 DIM chr_mz[1]
 ' DUMMY
 str1$=str0$+"0"
 IF mz_mode==0 OR mz_mode==2 THEN
  PRINT str0$
 ENDIF
 IF mz_mode>=1 THEN
  ' DEBUG
  'PRINT "r_ptr &H";HEX$(mz_buff_r_ptr)
  'PRINT "buff  &H";HEX$(mz_buff_addr[mz_buff_r_ptr])
  ' MZ-80C ORIGINAL CHAR
  'FOR i=0 TO LEN(str1$)-1
  FOR i=0 TO LEN(str1$)-1
   'str_ascii=ASC(str0$[i])
   str_ascii=ASC(str1$[i])
   str_mz=-1
   IF (str_ascii>=ASC("A")) AND (str_ascii<=ASC("Z")) THEN
    ' A-Z
    str_mz=str_ascii-ASC("A")+&H01
   ELSEIF (str_ascii>=ASC("a")) AND (str_ascii<=ASC("z")) THEN
    ' a-z
    str_mz=str_ascii-ASC("a")+&H01
   ELSEIF (str_ascii>=ASC("0")) AND (str_ascii<=ASC("9")) THEN
    ' 0-9
    str_mz=str_ascii-ASC("0")+&H20
   ELSEIF (str_ascii>=ASC("!")) AND (str_ascii<=ASC(")")) THEN
    ' !"#$%&'()
    str_mz=str_ascii-ASC("!")+&H61
   ELSE
    ' TABLE REFARENCE
    RESTORE @CONV_STR_TABLE
    WHILE 1
     READ input_str$,output_num
     IF input_str$=="" THEN BREAK
     IF str_ascii==ASC(input_str$) THEN
      str_mz=output_num
      BREAK
     ENDIF
    WEND
    IF str_mz==-1 THEN
     ' ETC.(SPACE)
     str_mz=&H00
    ENDIF
   ENDIF
   ' DEBUG
   'PRINT "ASC  &H";HEX$(str_ascii)
   'PRINT "MZ   &H";HEX$(str_MZ)
   'PRINT "addr &H";HEX$(mz_buff_addr[mz_buff_r_ptr])
   IF str_mz<0 THEN str_mz=0
   ' LAST CHAR
   IF i>=LEN(str1$)-1 THEN
    str_mz=-1
   ENDIF
   'EMUMEM mz_console_addr, str_mz
   'mz_console_addr=mz_console_addr+1
   'EMUMEM mz_buff_addr[mz_buff_r_ptr], str_mz
   'mz_buff_addr[mz_buff_r_ptr]=mz_buff_addr[mz_buff_r_ptr]+1
   chr_mz[0]=str_mz
   COPY mz_buff_chr,mz_console_x_max*mz_buff_w_ptr+i,chr_mz
   ' DEBUG
   'PRINT "chr  &H";HEX$(chr_mz[0])
   'PRINT "ptr  &H";HEX$(mz_console_x_max*mz_buff_w_ptr+i)
   'PRINT "buff  &H";HEX$(mz_buff_chr[mz_console_x_max*mz_buff_w_ptr+i])
  NEXT
  'mz_buff_r_ptr=mz_buff_r_ptr+1
  'IF mz_buff_r_ptr>=mz_buff_max THEN mz_buff_r_ptr=0
  mz_buff_w_ptr=mz_buff_w_ptr+1
  IF mz_buff_w_ptr>=mz_buff_max THEN mz_buff_w_ptr=0
 ENDIF

 @CONV_STR_TABLE
  ' ASCII KIGOU
  DATA "*",&H6B
  DATA "+",&H6A
  DATA ",",&H2F
  DATA "-",&H2A
  DATA ".",&H2E
  DATA "/",&H2D
  DATA ":",&H4F
  DATA ";",&H2C
  DATA "<",&H51
  DATA "=",&H2B
  DATA ">",&H57
  DATA "?",&H49
  DATA "@",&H55
  DATA "[",&H52
  DATA "\",&HDD
  DATA "]",&H54
  DATA "|",&H35
  DATA "=",&H2B
  ' KANA
  DATA "チ",&H81
  DATA "コ",&H82
  DATA "ソ",&H83
  DATA "シ",&H84
  DATA "イ",&H85
  DATA "ハ",&H86
  DATA "キ",&H87
  DATA "ク",&H88
  DATA "ニ",&H89
  DATA "マ",&H8A
  DATA "ノ",&H8B
  DATA "リ",&H8C
  DATA "モ",&H8D
  DATA "ミ",&H8E
  DATA "ラ",&H8F
  DATA "セ",&H90
  DATA "タ",&H91
  DATA "ス",&H92
  DATA "ト",&H93
  DATA "カ",&H94
  DATA "ナ",&H95
  DATA "ヒ",&H96
  DATA "テ",&H97
  DATA "サ",&H98
  DATA "ン",&H99
  DATA "ツ",&H9A
  DATA "ロ",&H9B
  DATA "ケ",&H9C
  DATA "「",&H9D
  DATA "ァ",&H9E
  DATA "ャ",&H9F
  DATA "ワ",&HA0
  DATA "ヌ",&HA1
  DATA "フ",&HA2
  DATA "ア",&HA3
  DATA "ウ",&HA4
  DATA "エ",&HA5
  DATA "オ",&HA6
  DATA "ヤ",&HA7
  DATA "ユ",&HA8
  DATA "ヨ",&HA9
  DATA "ホ",&H9A
  DATA "ヘ",&HAB
  DATA "レ",&HAC
  DATA "メ",&HAD
  DATA "ル",&HAE
  DATA "ネ",&HAF
  DATA "ム",&HB0
  DATA "」",&HB1
  DATA "ィ",&HB2
  DATA "ュ",&HB3
  DATA "ヲ",&HB4
  DATA "、",&HB5
  DATA "ゥ",&HB6
  DATA "ョ",&HB7
  DATA "゜",&HB8
  DATA "．",&HB9
  DATA "ェ",&HBA
  DATA "ッ",&HBB
  DATA "゛",&HBC
  DATA "。",&HBD
  DATA "ォ",&HBE
  DATA "ー",&HBF
  ' KIGOU
  'DATA "",&H10
  'DATA "",&H11
  'DATA "",&H12
  'DATA "",&H13
  'DATA "",&H14
  'DATA "",&H15
  'DATA "",&H16
  'DATA "",&H17
  'DATA "",&H18
  'DATA "",&H19
  'DATA "",&H1A
  DATA "",&H1B
  DATA "",&H1C
  DATA "",&H1D
  DATA "",&H1E
  DATA "",&H1F
  'DATA "",&H30
  'DATA "",&H31
  'DATA "",&H32
  'DATA "",&H33
  'DATA "",&H34
  'DATA "",&H35
  'DATA "",&H36
  DATA "",&H37
  'DATA "",&H38
  DATA "",&H39
  'DATA "",&H3A
  'DATA "",&H3B
  DATA "",&H3C
  'DATA "",&H3D
  DATA "",&H3E
  'DATA "",&H3F
  DATA "　",&H40
  DATA "♠",&H41
  DATA "",&H42
  DATA "",&H43
  DATA "♦",&H44
  DATA "←",&H45
  DATA "♣",&H46
  DATA "●",&H47
  DATA "",&H48
  DATA "？",&H49
  DATA "",&H4A
  'DATA "",&H4B
  'DATA "",&H4C
  DATA "",&H4D
  DATA "",&H4E
  DATA "：",&H4F
  DATA "↑",&H50
  DATA "＜",&H51
  DATA "[",&H52
  DATA "♥",&H53
  DATA "]",&H54
  DATA "＠",&H55
  DATA "",&H56
  DATA "＞",&H57
  'DATA "",&H58
  'DATA "",&H59
  DATA "",&H5A
  'DATA "",&H5B
  DATA "",&H5C
  DATA "",&H5D
  DATA "",&H5E
  DATA "",&H5F
  'DATA "",&H60
  'DATA "",&H61
  'DATA "",&H62
  'DATA "",&H63
  'DATA "",&H64
  'DATA "",&H65
  'DATA "",&H66
  'DATA "",&H67
  'DATA "",&H68
  'DATA "",&H69
  'DATA "",&H6A
  'DATA "",&H6B
  'DATA "",&H6C
  DATA "",&H6D
  'DATA "",&H6E
  'DATA "",&H6F
  'DATA "",&H70
  'DATA "",&H71
  'DATA "",&H72
  'DATA "",&H73
  'DATA "",&H74
  'DATA "",&H75
  DATA "",&H76
  DATA "",&H77
  'DATA "",&H78
  'DATA "",&H79
  DATA "",&H7A
  'DATA "",&H7B
  'DATA "",&H7C
  'DATA "",&H7D
  DATA "",&H7E
  'DATA "",&H7F
  DATA "",&HC0
  'DATA "",&HC1
  'DATA "",&HC2
  'DATA "",&HC3
  'DATA "",&HC4
  'DATA "",&HC5
  'DATA "",&HC6
  DATA "",&HC7
  DATA "",&HC8
  DATA "",&HC9
  DATA "",&HCA
  DATA "",&HCB
  DATA "",&HCC
  DATA "",&HCD
  DATA "",&HCE
  DATA "",&HCF
  ' KANJI
  DATA "日",&HD0
  DATA "月",&HD1
  DATA "火",&HD2
  DATA "水",&HD3
  DATA "木",&HD4
  DATA "金",&HD5
  DATA "土",&HD6
  DATA "生",&HD7
  DATA "年",&HD8
  DATA "時",&HD9
  DATA "分",&HDA
  DATA "秒",&HDB
  DATA "円",&HDC
  DATA "￥",&HDD
  DATA "£",&HDE
  DATA "",&HDF
  'DATA "",&HE0
  'DATA "",&HE1
  'DATA "",&HE2
  'DATA "",&HE3
  'DATA "",&HE4
  'DATA "",&HE5
  'DATA "",&HE6
  'DATA "",&HE7
  'DATA "",&HE8
  'DATA "",&HE9
  'DATA "",&HEA
  'DATA "",&HEB
  DATA "",&HEC
  DATA "",&HED
  'DATA "",&HEE
  'DATA "",&HEF
  ' 2*2 DOT
  'DATA "",&HF0
  DATA "",&HF1
  DATA "",&HF2
  DATA "",&HF3
  DATA "",&HF4
  DATA "",&HF5
  DATA "",&HF6
  DATA "",&HF7
  DATA "",&HF8
  DATA "",&HF9
  DATA "",&HFA
  DATA "",&HFB
  DATA "",&HFC
  DATA "",&HFD
  DATA "",&HFE
  DATA "",&HFF
  DATA "",0
END

